
upstream server_group_1 {           # general group
    server prices_generator_1_1:8000 weight=1 max_fails=3 fail_timeout=30s;  # weak server, receives less traffic
    server prices_generator_1_2:8000 weight=3 max_fails=3 fail_timeout=30s;
}

upstream server_group_2 {           # UK, US, Asia markets dedicated group
    server prices_generator_2_1:8000;
}

# traffic rooting based on `market` API parameter
map $arg_market $backend {
    default server_group_1;
    "UK" server_group_2;
    "US" server_group_2;
    "Asia" server_group_2;
}

server {

    listen 80;

    location / {
        proxy_pass http://$backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 8081;
    
    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;  # Allow only local requests to the status page
    }
}

log_format upstreamlog '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      'upstream: $upstream_addr '
                      'request_time: $request_time '
                      'upstream_response_time: $upstream_response_time';

access_log /var/log/nginx/access.log upstreamlog;